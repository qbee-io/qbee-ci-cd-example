# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
    tags:
      - 'v*.*.*'
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - run: git rev-parse --short HEAD

      - name: git command test
        run: |
          echo ${{ github.ref_name }}
          echo ${{ github.ref }}
          basename ${{ github.repository }}
          echo ${{ github.sha }} | cut -c -7
          git describe --tags --abbrev=0
          git rev-parse --short HEAD
# git describe --tags --abbrev=0 2>/dev/null
# git rev-parse --show-toplevel
# git rev-parse --short HEAD

      - name: Test
        run: |
          env

      # Runs a single command using the runners shell
      - name: Package
        uses: bpicode/github-action-fpm@v0.9.2
        with:
          fpm_args: "--version 0.0.123"
          fpm_opts: "-s dir -t deb -n qbee-ci-cd-example -d python3-flask -d python3-yaml -C ./files/package etc usr"

      - name: find package
        run: |
          ls -l
          find . -iname "*.deb"

      - name: qbee.io authentication
        id: qbee-auth
        uses: qbee-io/authenticate-action@v1
        with:
          login: ${{ secrets.QBEE_USER }}
          password: ${{ secrets.QBEE_PW }}

      - name: qbee.io file upload deb package
        uses: qbee-io/file-upload-action@v1.2
        with:
          token: ${{ steps.qbee-auth.outputs.token }}
          filename: 'qbee-ci-cd-example_0.0.123_amd64.deb'
          qbee_directory: '/github-upload/'
          local_directory: '.'

      - name: qbee.io software management
        uses: qbee-io/software-management-action@v0.3
        with:
          token: ${{ steps.qbee-auth.outputs.token }}
          config_file: 'qbee/software_management.json'
          mode: 'if_not_present'
          device_or_group_id: ${{ secrets.QBEE_DEVICE_ID }}
          commit_message: 'uploading content from GitHub'
